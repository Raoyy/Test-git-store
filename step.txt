$ mkdir learngit    //创建文件夹
$ cd learngit        //进入该文件夹
$ pwd                 //查看当前目录
/Users/michael/learngit

$ git init                   //创建git管理仓库
Initialized empty Git repository in /Users/michael/learngit/.git/

$ git add readme.txt          //添加文件

$ git commit -m "wrote a readme file"                    //提交文件，-m后为提交说明 
[master (root-commit) eaadf4e] wrote a readme file
 1 file changed, 2 insertions(+)
 create mode 100644 readme.txt

commit 没有-m输入备注信息时进入vim窗口操作步骤： 
1.摁键盘i,最下面有所变化
2.此时光标在最上面，输入要替提交的说明'comment',嗯Esc,然后输入:,光标跑到了最下面
3.输入wq之后，摁回车即可，就要回到了原始的命令行界面

$ git add testFile1.txt testFile2.txt            //一次性添加多个文件

$ git status     //查看当前目录下有哪些文件有修改

$ git diff ***.txt      //查看文件做了哪些修改
关于git diff 无输出问题：
比较工作区与版本库最新版本，若无变化，则无输出

$ git diff HEAD -- readme.txt               //命令可以查看工作区和版本库里面最新版本的区别

$ git log --pretty=oneline               //查看版本号（后缀部分用于把版本号集成于一行）

$ git reset --hard HEAD^         //版本回退（向上回退一个版本），HEAD^^（上上个版本），HEAD~100即向上回退100个版本
HEAD is now at e475afc add distributed

$ git reset --hard 1094a          //去到固定版本（版本号无需输全），可以用于版本回退后前进版本
HEAD is now at 83b0afe append GPL

$ cat readme.txt               //查看文件内容

$ git reflog                   //查看版本历史记录，commit id

$ git checkout -- file            //可以丢弃工作区的修改,加入暂存区后无效

$ git reset HEAD <file>             //可以把暂存区的修改撤销掉（unstage），重新放回工作区

$ rm test.txt        //删除文件（删除的是工作区的文件，即本地文件）

$ git rm test.txt        //将删除文件添加到工作区（若本地未删除此文件，则会删除本地文件），此时想要恢复本地文件，需要先git reset HEAD <file>，然后再git checkout -- <file>

$ git checkout -- test.txt           //误删除后，重新加载版本库中文件到工作区